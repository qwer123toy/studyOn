// Generated by view binder compiler. Do not edit!
package com.studyon.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.studyon.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAwardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView imageAwardIcon;

  @NonNull
  public final TextView textAwardDate;

  @NonNull
  public final TextView textAwardDescription;

  @NonNull
  public final TextView textAwardTitle;

  private ItemAwardBinding(@NonNull CardView rootView, @NonNull CardView cardView,
      @NonNull ImageView imageAwardIcon, @NonNull TextView textAwardDate,
      @NonNull TextView textAwardDescription, @NonNull TextView textAwardTitle) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.imageAwardIcon = imageAwardIcon;
    this.textAwardDate = textAwardDate;
    this.textAwardDescription = textAwardDescription;
    this.textAwardTitle = textAwardTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAwardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAwardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_award, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAwardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardView = (CardView) rootView;

      id = R.id.image_award_icon;
      ImageView imageAwardIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageAwardIcon == null) {
        break missingId;
      }

      id = R.id.text_award_date;
      TextView textAwardDate = ViewBindings.findChildViewById(rootView, id);
      if (textAwardDate == null) {
        break missingId;
      }

      id = R.id.text_award_description;
      TextView textAwardDescription = ViewBindings.findChildViewById(rootView, id);
      if (textAwardDescription == null) {
        break missingId;
      }

      id = R.id.text_award_title;
      TextView textAwardTitle = ViewBindings.findChildViewById(rootView, id);
      if (textAwardTitle == null) {
        break missingId;
      }

      return new ItemAwardBinding((CardView) rootView, cardView, imageAwardIcon, textAwardDate,
          textAwardDescription, textAwardTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
